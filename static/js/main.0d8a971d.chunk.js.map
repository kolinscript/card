{"version":3,"sources":["misc.js","App.js","serviceWorker.js","index.js"],"names":["updateCanvas","ctx","container","canvas","circleProps","simplex","baseHue","PI","Math","cos","sin","abs","random","TAU","rand","n","initCircles","i","Float32Array","circleCount","window","SimplexNoise","initCircle","x","y","t","speed","vx","vy","ttl","radius","hue","a","width","height","noise3D","set","updateCircle","life","i2","i3","i4","i5","i6","i7","i8","drawCircle","checkBounds","save","fillStyle","m","hm","fadeInOut","beginPath","arc","fill","closePath","restore","createCanvas","document","querySelector","createElement","b","style","appendChild","getContext","resize","innerWidth","innerHeight","drawImage","draw","clearRect","fillRect","updateCircles","filter","requestAnimationFrame","addEventListener","App","props","drawBackground","handlePageChange","number","setState","currentPage","state","qrCodeShow","isSafari","bind","showQrCOde","this","handleLoad","undefined","safari","removeEventListener","className","containerHeight","containerWidth","pageOnChange","customPageNumber","href","target","rel","onClick","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0d8a971d.chunk.js","sourcesContent":["export function updateCanvas() {\n    const {PI, cos, sin, abs, random} = Math;\n    const TAU = 2 * PI;\n    const rand = n => n * random();\n    const fadeInOut = (t, m) => {\n        let hm = 0.5 * m;\n        return abs((t + hm) % m - hm) / (hm);\n    };\n    const circleCount = 150;\n    const circlePropCount = 8;\n    const circlePropsLength = circleCount * circlePropCount;\n    const baseSpeed = 0.1;\n    const rangeSpeed = 1;\n    const baseTTL = 150;\n    const rangeTTL = 200;\n    const baseRadius = 100;\n    const rangeRadius = 200;\n    const rangeHue = 60;\n    const xOff = 0.0015;\n    const yOff = 0.0015;\n    const zOff = 0.0015;\n    const backgroundColor = 'hsla(0,0%,5%,1)';\n    let ctx;\n    let container;\n    let canvas;\n    let circleProps;\n    let simplex;\n    let baseHue;\n\n    const setup = () => {\n        createCanvas();\n        resize();\n        initCircles();\n        draw();\n    }\n\n    const initCircles = () => {\n        circleProps = new Float32Array(circlePropsLength);\n        simplex = new window.SimplexNoise();\n        baseHue = 220;\n\n        let i;\n\n        for (i = 0; i < circlePropsLength; i += circlePropCount) {\n            initCircle(i);\n        }\n    }\n\n    const initCircle = (i) => {\n        let x, y, n, t, speed, vx, vy, life, ttl, radius, hue;\n\n        x = rand(canvas.a.width);\n        y = rand(canvas.a.height);\n        n = simplex.noise3D(x * xOff, y * yOff, baseHue * zOff);\n        t = rand(TAU);\n        speed = baseSpeed + rand(rangeSpeed);\n        vx = speed * cos(t);\n        vy = speed * sin(t);\n        life = 0;\n        ttl = baseTTL + rand(rangeTTL);\n        radius = baseRadius + rand(rangeRadius);\n        hue = baseHue + n * rangeHue;\n\n        circleProps.set([x, y, vx, vy, life, ttl, radius, hue], i);\n    }\n\n    const updateCircles = () => {\n        let i;\n        baseHue++;\n        for (i = 0; i < circlePropsLength; i += circlePropCount) {\n            updateCircle(i);\n        }\n    }\n\n    const updateCircle = (i) => {\n        let i2 = 1 + i, i3 = 2 + i, i4 = 3 + i, i5 = 4 + i, i6 = 5 + i, i7 = 6 + i, i8 = 7 + i;\n        let x, y, vx, vy, life, ttl, radius, hue;\n\n        x = circleProps[i];\n        y = circleProps[i2];\n        vx = circleProps[i3];\n        vy = circleProps[i4];\n        life = circleProps[i5];\n        ttl = circleProps[i6];\n        radius = circleProps[i7];\n        hue = circleProps[i8];\n\n        drawCircle(x, y, life, ttl, radius, hue);\n\n        life++;\n\n        circleProps[i] = x + vx;\n        circleProps[i2] = y + vy;\n        circleProps[i5] = life;\n\n        (checkBounds(x, y, radius) || life > ttl) && initCircle(i);\n    }\n\n    const drawCircle = (x, y, life, ttl, radius, hue) => {\n        ctx.a.save();\n        ctx.a.fillStyle = `hsla(${hue},60%,30%,${fadeInOut(life, ttl)})`;\n        ctx.a.beginPath();\n        ctx.a.arc(x, y, radius, 0, TAU);\n        ctx.a.fill();\n        ctx.a.closePath();\n        ctx.a.restore();\n    }\n\n    const checkBounds = (x, y, radius) => {\n        return (\n            x < -radius ||\n            x > canvas.a.width + radius ||\n            y < -radius ||\n            y > canvas.a.height + radius\n        );\n    }\n\n    const createCanvas = () => {\n        container = document.querySelector('.wrapper-canvas');\n        canvas = {\n            a: document.createElement('canvas'),\n            b: document.createElement('canvas')\n        };\n        canvas.b.style = `\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            `;\n        container.appendChild(canvas.b);\n        ctx = {\n            a: canvas.a.getContext('2d'),\n            b: canvas.b.getContext('2d')\n        };\n    }\n\n    const resize = () => {\n        const {innerWidth, innerHeight} = window;\n\n        canvas.a.width = innerWidth;\n        canvas.a.height = innerHeight;\n\n        ctx.a.drawImage(canvas.b, 0, 0);\n\n        canvas.b.width = innerWidth;\n        canvas.b.height = innerHeight;\n\n        ctx.b.drawImage(canvas.a, 0, 0);\n    }\n\n    const render = () => {\n        ctx.b.save();\n        ctx.b.filter = 'blur(50px)';\n        ctx.b.drawImage(canvas.a, 0, 0);\n        ctx.b.restore();\n    }\n\n    const draw = () => {\n        ctx.a.clearRect(0, 0, canvas.a.width, canvas.a.height);\n        ctx.b.fillStyle = backgroundColor;\n        ctx.b.fillRect(0, 0, canvas.b.width, canvas.b.height);\n        updateCircles();\n        render();\n        window.requestAnimationFrame(draw);\n    }\n\n    window.addEventListener('load', setup);\n    window.addEventListener('resize', resize);\n}\n","import React, {Component} from 'react';\nimport './App.scss';\nimport ReactPageScroller from \"react-page-scroller\";\nimport {updateCanvas} from \"./misc\";\n\nclass App extends Component {\n    drawBackground = updateCanvas;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentPage: null,\n            qrCodeShow: false,\n            isSafari: false\n        };\n        this.handlePageChange = this.handlePageChange.bind(this);\n        this.showQrCOde = this.showQrCOde.bind(this);\n    }\n\n    componentDidMount() {\n        window.addEventListener('load', this.handleLoad);\n        this.setState({isSafari: window.safari !== undefined});\n        this.drawBackground();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('load', this.handleLoad);\n    }\n\n    handlePageChange = number => {\n        this.setState({currentPage: number}); // set currentPage number, to reset it from the previous selected.\n    };\n\n    showQrCOde() {\n        this.setState({qrCodeShow: !this.state.qrCodeShow});\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <div className=\"main\">\n                    <div className=\"wrapper-canvas\"></div>\n                    <div className={this.state.isSafari ? 'safari-filter active' : 'safari-filter'}></div>\n                    <div className=\"wrapper-content\">\n                        <div className=\"border\"><span></span></div>\n                        <div className=\"content\">\n                            <ReactPageScroller\n                                containerHeight='100%'\n                                containerWidth='100%'\n                                pageOnChange={this.handlePageChange}\n                                customPageNumber={this.state.currentPage}\n                            >\n                                <div className=\"item one\">\n                                    <div className={this.state.qrCodeShow ? 'block hidden' : 'block'}>\n                                        <div className=\"center\">\n                                            <div className=\"top\">\n                                                <div className=\"top-one\">\n                                                    <span className=\"el one\">nikolai</span>\n                                                </div>\n                                                <div className=\"top-two\">\n                                                    <span className=\"el one\">Koshkarov</span>\n                                                </div>\n                                            </div>\n                                            <div className=\"bot\">\n                                                <div className=\"bot-one\">\n                                                    <span className=\"el one visible\">frontend</span>\n                                                    <span className=\"el two\">₣ⱤØ₦₮Ɇ₦Đ</span>\n                                                    <span className=\"el three\">乍尺回几卞ヨ几句</span>\n                                                    <span className=\"el four\">FЯӨПƬΣПD</span>\n                                                </div>\n                                                <div className=\"bot-two\">\n                                                    <span className=\"el one\">engineer</span>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"links\">\n                                            <div className=\"link\">\n                                                <a className=\"telega\"\n                                                   href=\"https://t.me/koshkarovnik\"\n                                                   target=\"_blank\"\n                                                   rel=\"noopener noreferrer\"\n                                                >\n                                                    <span className=\"full\">Telegram</span>\n                                                    <span className=\"short\">Tg</span>\n                                                </a>\n                                            </div>\n                                            <div className=\"link\">\n                                                <a className=\"gmail\"\n                                                   href=\"mailto:koshkarovnik@gmail.com\"\n                                                >Mail\n                                                </a>\n                                            </div>\n                                            <div className=\"link\">\n                                                <a className=\"github\"\n                                                   href=\"https://github.com/kolinscript\"\n                                                   target=\"_self\"\n                                                   rel=\"noopener noreferrer\"\n                                                >Git\n                                                </a>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"cta\">scroll down</div>\n                                    </div>\n\n                                    <div className={this.state.qrCodeShow ? 'qr-code show' : 'qr-code'}>\n                                        <a className=\"code\" onClick={this.showQrCOde}></a>\n                                    </div>\n                                </div>\n\n                                <div className=\"item two\">\n                                    <div className=\"block\">\n                                        <h1>skills</h1>\n\n                                        <div className=\"about\">\n                                            <div className=\"text\">\n                                                More than a 4 years experience in web developing, participating and creating web applications, stores, sites and landing pages for big and small customers in several companies. Focused on <span className=\"angular\">Angular</span> (about 3+ years exp.) or <span className=\"react\">React</span> projects, i write clean, high-performance code.\n                                            </div>\n                                        </div>\n\n                                        <div className=\"icon-dev\"></div>\n\n                                        <div className=\"skills-block\">\n                                            <div className=\"skill\">\n                                                <div className=\"s-title\">Java Script</div>\n                                                <div className=\"s-icon\"></div>\n                                            </div>\n                                            <div className=\"skill\">\n                                                <div className=\"s-title\">HTML</div>\n                                                <div className=\"s-icon\"></div>\n                                            </div>\n                                            <div className=\"skill\">\n                                                <div className=\"s-title\">CSS</div>\n                                                <div className=\"s-icon\"></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                {/*<div className=\"item three\">*/}\n                                {/*    <div className=\"block\">*/}\n                                {/*        <h1>works</h1>*/}\n                                {/*        <div className=\"works-block\">*/}\n                                {/*            <div className=\"works\">*/}\n                                {/*                <div className=\"w-title\"></div>*/}\n                                {/*                <div className=\"w-icon\"></div>*/}\n                                {/*            </div>*/}\n                                {/*        </div>*/}\n                                {/*    </div>*/}\n                                {/*</div>*/}\n\n                                <div className=\"item fish\">\n                                    🚧\n                                    <span className=\"title\">CAUTION</span>\n                                    <span className=\"subtitle\">the page is under construction</span>\n                                </div>\n                            </ReactPageScroller>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}